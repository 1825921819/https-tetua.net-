// Code generated by entc, DO NOT EDIT.

package page

import (
	"time"
)

const (
	// Label holds the string label denoting the page type in the database.
	Label = "page"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldSlug holds the string denoting the slug field in the database.
	FieldSlug = "slug"
	// FieldContent holds the string denoting the content field in the database.
	FieldContent = "content"
	// FieldContentHTML holds the string denoting the content_html field in the database.
	FieldContentHTML = "content_html"
	// FieldDraft holds the string denoting the draft field in the database.
	FieldDraft = "draft"
	// FieldFeaturedImageID holds the string denoting the featured_image_id field in the database.
	FieldFeaturedImageID = "featured_image_id"
	// EdgeFeaturedImage holds the string denoting the featured_image edge name in mutations.
	EdgeFeaturedImage = "featured_image"
	// Table holds the table name of the page in the database.
	Table = "pages"
	// FeaturedImageTable is the table that holds the featured_image relation/edge.
	FeaturedImageTable = "pages"
	// FeaturedImageInverseTable is the table name for the File entity.
	// It exists in this package in order to avoid circular dependency with the "file" package.
	FeaturedImageInverseTable = "files"
	// FeaturedImageColumn is the table column denoting the featured_image relation/edge.
	FeaturedImageColumn = "featured_image_id"
)

// Columns holds all SQL columns for page fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldName,
	FieldSlug,
	FieldContent,
	FieldContentHTML,
	FieldDraft,
	FieldFeaturedImageID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultDraft holds the default value on creation for the "draft" field.
	DefaultDraft bool
)
